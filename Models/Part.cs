// Generated by https://quicktype.io
//
// To change quicktype's target language, run command:
//
//   "Set quicktype target language"

using NSpecifications;

namespace nugsnet6.Models;

public class Part
{
    public string Id { get; set; } = string.Empty;
    public string Name { get; set; } = string.Empty;
    public string Kind { get; set; } = string.Empty;
    public string Type { get; set; } = string.Empty;
    public string Notes { get; set; } = string.Empty;
    public string ProductCode { get; set; } = string.Empty;
    public double Cost { get; set; }
    public string WeightInOz { get; set; }
    public string Attachments { get; set; }
    public string Calibers { set; get; }
    public string Builds { set; get; }
    public string Url { get; set; } = string.Empty;
    public string Demo { get; set; } = string.Empty;
    public long ComboCost { get; set; }
    public object Combo { get; set; }
    public string CreatedBy { get; set; }
    public DateTime Created { get; set; }
    public string LastModifiedBy { get; set; }
    public DateTime LastModified { get; set; }
    public string ImageUrl { get; set; } = string.Empty;
    public string Manufacturer { get; set; } = string.Empty;

    public static CodeMechanic.Extensions.Maybe<Part> NotFound = new(new Part()
    {
        Id = string.Empty, Name = "Not Available", Cost = -1, ComboCost = -1
    });

    public static ISpecification<Part> IsValid => new Spec<Part>(part => part.Cost > 0
                                                                         && NotFound.IfSome(_ =>
                                                                             part.Equals(NotFound.Value)));


    // public Attachment[] Attachments { get; set; }
    // public DateTime createdTime { get; set; }
    // public DateTimeOffset LastModified { get; set; }
    // public DateTimeOffset Created { get; set; }
}