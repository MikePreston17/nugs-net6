@page
@using Htmx.TagHelpers
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using nugsnet6.Pages.Shared
@using nugsnet6.Models

@using CodeMechanic.RazorHAT.Services
@using CodeMechanic.Types
@using NSpecifications
@using nugsnet6.Extensions
@using TPOT_Links.Controllers
@using CodeMechanic.Diagnostics
@model IndexModel
@inject IMarkdownService markdownService
@inject IPartService partsService
@{
    var markdown_files = markdownService.GetAllMarkdownFiles(devmode: false);
    var parts = partsService.ReadAll();

    var md_calc = new StatsCalculator<MarkdownFile>(markdown_files)
        .AddValidation(md => md.FilePath.IsNotEmpty());

    var markdown_stats = md_calc
        .ComputeStats()
        .With(x => x.Title = "Total Markdown Files")
        ;

    var parts_calc = new StatsCalculator<Part>(parts)
        .AddValidation(p => !(p.Cost < 0) && p.Name.IsNotEmpty());

    var parts_stats = parts_calc
        .ComputeStats()
        .With(x => x.Title = "Total Parts")
        ;

    /*
    ASpec<AmmoseekRow> ammo = new Spec<AmmoseekRow>(
        ammo => ammo.caliber.NotEmpty()
        );

    var ammo_calc = new StatsCalculator<AmmoseekRow>(Model.AmmoseekRows)
        .AddValidation(ammo);

    var ammo_stats = ammo_calc.ComputeStats().With(x => x.Title = "Ammo Stats");
    ammo_stats.Dump("ammo");
    */
}

<div class="hero min-h-sm bg-base-200">
    <div class="hero-content text-center">
        <div class="max-w-md">
            <h1 class="text-5xl font-bold">Sandbox üèùÔ∏è</h1>
            <p class="py-6">Provident cupiditate voluptatem et in. Quaerat fugiat ut assumenda excepturi exercitationem quasi. In deleniti eaque aut repudiandae et a id nisi.</p>
            <!-- <button class="btn btn-primary">Get Started</button> -->

        </div>
    </div>
</div>

<section class="vertical-padding flex flex-col gap-2">


    <div class="grid grid-cols-2 grid-rows-auto">

        <!-- markdown stats -->
        <partial name="_SandboxStatsCard" model="@markdown_stats"></partial>
        <!-- regexes found stats -->
        <partial name="_SandboxStatsCard" model="@parts_stats"></partial>

    </div>

    <button
        hx-get
        hx-trigger="revealed once, click"
        hx-page="Index"
        hx-page-handler="AmmoseekPrices"
        hx-target="#prices"
        class="btn btn-alert">
        Get Ammo Prices

        <img alt="Result loading..." class="htmx-indicator" width="25" src="/img/bars.svg"/>

    </button>

    @* <img id="loading_prices" alt="Result loading..." class="htmx-indicator" width="150" src="/img/bars.svg"/> *@

    <div x-if="true" id="prices">
        <template>
            <partial name="_AmmoseekTable" model="Model.AmmoseekRows"></partial>
        </template>
    </div>

    <div x-if="false">
        <template>
            <h1>Invalid Parts</h1>
            @if (!parts_calc.InvalidMatches.IsNullOrEmpty())
            {
                @foreach (var valid_part in parts_calc.InvalidMatches)
                {
                    <li>Name: @valid_part.Name</li>
                    <li>Cost: @valid_part.Cost</li>
                }
            }
        </template>
    </div>


</section>