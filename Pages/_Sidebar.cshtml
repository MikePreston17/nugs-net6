@using System.Text.RegularExpressions
@using CodeMechanic.Advanced.Regex
@using CodeMechanic.RazorHAT.Services
@using CodeMechanic.Types
@using Newtonsoft.Json
@using nugsnet6.Models
@model dynamic

@inject IRazorRoutesService routes_service
@inject IJsonConfigService json_config
@{
    string regexp = @"(?<name>[a-zA-Z_-]*)\/$";

    var routes = routes_service.GetAllRoutes()
        // .Dump("all routes")
    ;


    var options = RegexOptions.Compiled
                  | RegexOptions.Multiline
                  | RegexOptions.IgnoreCase
                  | RegexOptions.IgnorePatternWhitespace;

    var settings_text = json_config.ReadConfig("sidebar_settings.json");
    // Console.WriteLine("settings text :>> " + settings_text);

    // TODO: fix disabling specific routes via config.
    var settings = JsonConvert.DeserializeObject<SidebarSettings>(settings_text);
    var blacklist = new string[] { "Inventory", "Users" };

    var sidebar_options = routes
        .SelectMany(route => route
            .Extract<SidebarRoute>(regexp, options: options)
            .With(option =>
            {
                var current = option.FirstOrDefault();
                if (route.Equals("/"))
                    current.Name = "Home";
                current.Href = route;
                current.Enabled = true;
            })
        )
        .Where(sb => sb.Enabled && !blacklist.Contains(sb.Name))
        ;

    // settings.Dump("settings");

}

@* style="background-image: uri(https://daisyui.com/images/stock/photo-1507358522600-9f71e620c44e.jpg);" *@
@* <div class="min-h-screen"> *@
<div class="w-auto flex flex-col gap-4 mx-6 text-center text-neutral-content">
    <div class="max-w-md">
        <ul class="menu p-4 min-h-full text-base-content text-pink-700">
            <!-- Sidebar content here -->
            @foreach (var sidebaroption in sidebar_options.Where(sb => sb.Enabled))
            {
                <li class="text-white">
                    <a href="@sidebaroption.Href">
                        @sidebaroption.Name
                    </a>
                </li>
            }
        </ul>
    </div>
</div>
@* </div> *@