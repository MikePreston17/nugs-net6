<!DOCTYPE html>
<html data-theme="night" lang="en" class='scroll-smooth'>
<head>
    <base href="~/"/>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>@ViewData["Title"] - Lock-N-Loadout</title>

    <script src="https://unpkg.com/htmx.org@latest"
            asp-fallback-src="~/lib/htmx.org/dist/htmx.min.js"
            asp-fallback-test="window.htmx"
            crossorigin="anonymous">
    </script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/4.2.1/chart.umd.min.js"></script>

    <link href="https://cdn.jsdelivr.net/npm/daisyui@2.47.0/dist/full.css" rel="stylesheet" type="text/css"/>

    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2/dist/tailwind.min.css" rel="stylesheet" type="text/css"/>

    <!-- Alpine Plugins -->
    <script defer src='https://cdn.jsdelivr.net/npm/@@alpinejs/persist@3.x.x/dist/cdn.min.js'></script>
    <script src="https://unpkg.com/htmx.org@latest/dist/ext/alpine-morph.js"></script>
    <script defer src="https://unpkg.com/@@alpinejs/morph@3.x.x/dist/cdn.min.js"></script>

    <!-- Alpine Core -->
    <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>

    <script type="module" src="~/js/main.js"></script>

    <link rel="stylesheet" href="~/css/site.css">

</head>

<body x-data='setup_layout()' class="m-2">
<header>

</header>
<div class="">
    <main role="main">
        @RenderBody()
    </main>
</div>

@await RenderSectionAsync("Scripts", required: false)

</body>

<script type="module">
    // Set up Alpine persistence
</script>

<script type='module'>
    // Set up Routes via JSON:
    
    const routes = await (async () => {
        let results = await import('./routes.json', {
            assert: {
                type: 'json'
            }
        })

        return results.default;
    })()

    localStorage.setItem('routes', JSON.stringify(routes));

</script>

<script>
    var stored_routes = JSON.parse(localStorage.getItem('routes')) || []
            // .filter(r=> !r.includes('Index'))  // Exclude Indexes for now.
    ;
    // console.log('stored_routes :>> ', stored_routes);

    var non_index_routes = stored_routes?.filter(r=>!r?.path?.includes('Index'))

    function setup_layout() {
        return {
            routes: non_index_routes || []
        }
    }
</script>

</html>